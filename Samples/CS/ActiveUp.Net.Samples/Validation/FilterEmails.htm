<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0??;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;??\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;??\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;??\red192\green192\blue192;}??\fs20 \cf11 // We instantiate the pop3 client.\par ??\cf0 Pop3Client pop = \cf2 new\cf0  Pop3Client();\par ??\par ??\cf2 try\par ??\cf0 \{\par ??    \cf2 this\cf0 .AddLogEntry(\cf2 string\cf0 .Format(\cf13 "Connection to the pop 3 server : \{0\}"\cf0 , _tbPop3Server));\par ??\par ??    \cf11 // Connect to the pop3 client\par ??\cf0     pop.Connect(_tbPop3Server.Text, _tbUserName.Text, _tbPassword.Text);\par ??\par ??    AddressCollection ac;\par ??    HeaderCollection hc = \cf2 new\cf0  HeaderCollection();\par ??\par ??    \cf11 //Retrive a message headers\par ??\cf0     \cf2 for\cf0  (\cf2 int\cf0  n = 0; n &lt; pop.MessageCount; n++)\par ??    \{\par ??        Header h = pop.RetrieveHeaderObject(n);\par ??        ac = \cf2 new\cf0  AddressCollection();\par ??        ac.Add(h.From);\par ??        ac = Validator.Filter(ac);\par ??\par ??        \cf11 //If address is not filtered\par ??\cf0         \cf2 if\cf0  (ac.Count &gt; 0)\par ??        \{\par ??            hc.Add(h);\par ??        \}\par ??    \}\par ??\par ??    \cf2 this\cf0 .AddLogEntry(\cf2 string\cf0 .Format(\cf13 " \{0\} messages passed the filter"\cf0 , hc.Count.ToString()));\par ??\}\par ??\par ??\cf2 catch\cf0  (Pop3Exception pexp)\par ??\{\par ??    \cf2 this\cf0 .AddLogEntry(\cf2 string\cf0 .Format(\cf13 "Pop3 Error: \{0\}"\cf0 , pexp.Message));\par ??\}\par ??\par ??\cf2 catch\cf0  (\cf10 Exception\cf0  ex)\par ??\{\par ??    \cf2 this\cf0 .AddLogEntry(\cf2 string\cf0 .Format(\cf13 "Failed: \{0\}"\cf0 , ex.Message));\par ??\}\par ??\par ??\cf2 finally\par ??\cf0 \{\par ??    \cf2 if\cf0  (pop.IsConnected)\par ??    \{\par ??        pop.Disconnect();\par ??    \}\par ??\}}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white;">
<p style="margin: 0px;"><span style="color: green;">// We instantiate the pop3 client.</span></p>
<p style="margin: 0px;">Pop3Client pop = <span style="color: blue;">new</span> Pop3Client();</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;"><span style="color: blue;">try</span></p>
<p style="margin: 0px;">{</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.AddLogEntry(<span style="color: blue;">string</span>.Format(<span style="color: maroon;">"Connection to the pop 3 server : {0}"</span>, _tbPop3Server));</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: green;">// Connect to the pop3 client</span></p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; pop.Connect(_tbPop3Server.Text, _tbUserName.Text, _tbPassword.Text);</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; AddressCollection ac;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; HeaderCollection hc = <span style="color: blue;">new</span> HeaderCollection();</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: green;">//Retrive a message headers</span></p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">for</span> (<span style="color: blue;">int</span> n = 1; n &lt; pop.MessageCount + 1; n++)</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Header h = pop.RetrieveHeaderObject(n);</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ac = <span style="color: blue;">new</span> AddressCollection();</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ac.Add(h.From);</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ac = Validator.Filter(ac);</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: green;">//If address is not filtered</span></p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: blue;">if</span> (ac.Count &gt; 0)</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; hc.Add(h);</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.AddLogEntry(<span style="color: blue;">string</span>.Format(<span style="color: maroon;">" {0} messages passed the filter"</span>, hc.Count.ToString()));</p>
<p style="margin: 0px;">}</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;"><span style="color: blue;">catch</span> (Pop3Exception pexp)</p>
<p style="margin: 0px;">{</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.AddLogEntry(<span style="color: blue;">string</span>.Format(<span style="color: maroon;">"Pop3 Error: {0}"</span>, pexp.Message));</p>
<p style="margin: 0px;">}</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;"><span style="color: blue;">catch</span> (<span style="color: teal;">Exception</span> ex)</p>
<p style="margin: 0px;">{</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">this</span>.AddLogEntry(<span style="color: blue;">string</span>.Format(<span style="color: maroon;">"Failed: {0}"</span>, ex.Message));</p>
<p style="margin: 0px;">}</p>
<p style="margin: 0px;">&nbsp;</p>
<p style="margin: 0px;"><span style="color: blue;">finally</span></p>
<p style="margin: 0px;">{</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">if</span> (pop.IsConnected)</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; pop.Disconnect();</p>
<p style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</p>
<p style="margin: 0px;">}</p>
</div>
